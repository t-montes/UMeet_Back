{
	"info": {
		"_postman_id": "70bc1968-cb2e-4c57-8a95-5afb5856527c",
		"name": "Friends",
		"description": "- Friends",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30796619",
		"_collection_link": "https://umeet-web.postman.co/workspace/UMeet-Back~2b3a45ca-5850-4a60-96d4-831af07e8ded/collection/30796580-70bc1968-cb2e-4c57-8a95-5afb5856527c?action=share&source=collection_link&creator=30796619"
	},
	"item": [
		{
			"name": "Create a User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"user_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Emilio\",\r\n    \"login\": \"emil.io\",\r\n    \"email\": \"emil.io@gmail.com\",\r\n    \"password\": \"Emilio01\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": [
				{
					"name": "Create a User",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"8051e048-de13-4539-9db4-5e7847515493\",\r\n    \"name\": \"Emilio\",\r\n    \"login\": \"emil.io\",\r\n    \"email\": \"emil.io@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Create a User 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"friend_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Michael\",\r\n    \"login\": \"michael\",\r\n    \"email\": \"michael@gmail.com\",\r\n    \"password\": \"Michael01\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": [
				{
					"name": "Create a User 2",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"8051e048-de13-4539-9db4-5e7847515493\",\r\n    \"name\": \"Michael\",\r\n    \"login\": \"michael\",\r\n    \"email\": \"michael@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Add new Friend",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response contains friend details\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData).to.have.property(\"name\");",
							"    pm.expect(jsonData).to.have.property(\"email\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"friend_id\": \"{{friend_id}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users/{{user_id}}/friends",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user_id}}",
						"friends"
					]
				}
			},
			"response": [
				{
					"name": "Create new friend",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"8051e048-de13-4539-9db4-5e7847515493\",\n    \"name\": \"Emilio\",\n    \"email\": \"emil.io@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/{{user_id}}/friends",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{user_id}}",
								"friends"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Get all Friends by User ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response is an array\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an(\"array\");",
							"});",
							"",
							"pm.test(\"Each friend has required fields\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.forEach(function(friend) {",
							"        pm.expect(friend).to.have.property(\"id\");",
							"        pm.expect(friend).to.have.property(\"login\");",
							"        pm.expect(friend).to.have.property(\"email\");",
							"        pm.expect(friend).to.have.property(\"name\");",
							"    });",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{user_id}}/friends",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user_id}}",
						"friends"
					]
				}
			},
			"response": [
				{
					"name": "Get all Friends by User ID",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"8051e048-de13-4539-9db4-5e7847515493\",\n        \"login\": \"emil.io\",\n        \"email\": \"emil.io@gmail.com\",\n        \"name\": \"Emilio\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/{{user_id}}/friends",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{user_id}}",
								"friends"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Get Friend by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código de respuesta es 200\", function () { pm.response.to.have.status(200); });",
							"",
							"pm.test(\"ID coincide con el solicitado\", function () { pm.expect(pm.response.json().id).to.eql(pm.variables.get(\"friend_id\")); });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{user_id}}/friends/{{friend_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user_id}}",
						"friends",
						"{{friend_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Get Friend by ID",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"8051e048-de13-4539-9db4-5e7847515493\",\n  \"email\": \"emil.io@gmail.com\",\n  \"name\": \"Emilio\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/{{user_id}}/friends/{{friend_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{user_id}}",
								"friends",
								"{{friend_id}}"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Get Friend by wrong ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código de respuesta es 404\", function () { pm.response.to.have.status(404); });",
							"",
							"pm.test(\"Mensaje de error\", function () { pm.expect(pm.response.json().message).to.eql(\"The friend with the given id was not found\"); });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{user_id}}/friends/{{wrongUUID}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user_id}}",
						"friends",
						"{{wrongUUID}}"
					]
				}
			},
			"response": [
				{
					"name": "Get Friend by wrong ID",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": \"The friend with the given id was not found\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/{{user_id}}/friends/{{wrongUUID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{user_id}}",
								"friends",
								"{{wrongUUID}}"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Delete a Friend by User ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{user_id}}/friends/{{friend_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user_id}}",
						"friends",
						"{{friend_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a Friend by User ID",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/{{user_id}}/friends/{{friend_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{user_id}}",
								"friends",
								"{{friend_id}}"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Delete a Friend by wrong User ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"   pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Response message is 'The user with the given id was not found'\", function () {",
							"  pm.expect(pm.response.json().message).to.equal(\"The user with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{wrongUUID}}/friends/{{friend_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{wrongUUID}}",
						"friends",
						"{{friend_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a Friend by wrong User ID",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": \"The user with the given id was not found\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/{{wrongUUID}}/friends/{{friend_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{wrongUUID}}",
								"friends",
								"{{friend_id}}"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Delete a Friend with wrong ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"   pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Response message is 'The user with the given id was not found'\", function () {",
							"  pm.expect(pm.response.json().message).to.equal(\"The friend with the given id was not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{user_id}}/friends/{{wrongUUID}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user_id}}",
						"friends",
						"{{wrongUUID}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a Friend with wrong ID",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": \"The friend with the given id was not found\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/{{user_id}}/friends/{{wrongUUID}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{user_id}}",
								"friends",
								"{{wrongUUID}}"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Delete a User 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{friend_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{friend_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a User",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/{{user_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{user_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Delete a User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{user_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a User",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/{{user_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{user_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		}
	]
}