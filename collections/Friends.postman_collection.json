{
	"info": {
		"_postman_id": "39fc6d62-ac3b-488e-963b-c2b24c91b0cc",
		"name": "Friends",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19767625",
		"_collection_link": "https://solar-spaceship-244943.postman.co/workspace/aaa~ed20b85b-f663-45c4-851e-143e241a0f31/collection/19767625-39fc6d62-ac3b-488e-963b-c2b24c91b0cc?action=share&source=collection_link&creator=19767625"
	},
	"item": [
		{
			"name": "API login user read",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var token = pm.response.json().token;\r",
							"pm.globals.set(\"tokenRead\", token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"userRead\",\r\n    \"password\": \"read\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/people/login",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"people",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "API login user write",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var token = pm.response.json().token;\r",
							"pm.globals.set(\"tokenWrite\", token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"userWrite\",\r\n    \"password\": \"write\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/people/login",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"people",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "API login user delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var token = pm.response.json().token;\r",
							"pm.globals.set(\"tokenDelete\", token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"userDelete\",\r\n    \"password\": \"delete\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/people/login",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"people",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear un user valido (1)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response must have an ID\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('id');",
							"    pm.globals.set(\"userId\", jsonData.id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenWrite}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Nombre del usuario\",\n  \"login\": \"loginUsuario\",\n  \"email\": \"usuario@example.com\",\n  \"password\": \"Password123!\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear un user valido (2)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response must have an ID\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('id');",
							"    pm.globals.set(\"user2Id\", jsonData.id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenWrite}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Nombre del usuario 2\",\n  \"login\": \"loginUsuario2\",\n  \"email\": \"usuario2@example.com\",\n  \"password\": \"Password123!\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear un user valido (3)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response must have an ID\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('id');",
							"    pm.globals.set(\"user3Id\", jsonData.id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenWrite}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Nombre del usuario 3\",\n  \"login\": \"loginUsuario3\",\n  \"email\": \"usuario3@example.com\",\n  \"password\": \"Password123!\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear un user valido (4)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response must have an ID\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('id');",
							"    pm.globals.set(\"user4Id\", jsonData.id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenWrite}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Nombre del usuario 4\",\n  \"login\": \"loginUsuario4\",\n  \"email\": \"usuario4@example.com\",\n  \"password\": \"Password123!\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Agregar como amigo de (1) a (2)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response has user data\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('id', pm.variables.get(\"userId\"));",
							"    var friendIds = jsonData.friends.map(friend => friend.id);",
							"    pm.expect(friendIds).to.include(pm.variables.get(\"user2Id\"));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenWrite}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Nombre del usuario 2\",\n  \"login\": \"loginUsuario2\",\n  \"email\": \"usuario2@example.com\",\n  \"password\": \"Password123!\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users/{{userId}}/friends/{{user2Id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{userId}}",
						"friends",
						"{{user2Id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Agregar como amigo de (2) a (1)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response has user data\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('id', pm.variables.get(\"user2Id\"));",
							"    var friendIds = jsonData.friends.map(friend => friend.id);",
							"    pm.expect(friendIds).to.include(pm.variables.get(\"userId\"));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenWrite}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Nombre del usuario 2\",\n  \"login\": \"loginUsuario2\",\n  \"email\": \"usuario2@example.com\",\n  \"password\": \"Password123!\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users/{{user2Id}}/friends/{{userId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user2Id}}",
						"friends",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener los amigos de (1)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenRead}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{userId}}/friends",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{userId}}",
						"friends"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener los NO amigos de (1)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Returns two users who are not friends with user1\", function () {",
							"    var responseData = pm.response.json();",
							"    pm.expect(responseData.length).to.eql(2);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenRead}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{userId}}/non-friends",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{userId}}",
						"non-friends"
					]
				}
			},
			"response": []
		},
		{
			"name": "Agregar como amigo de (1) a (1)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 and Users cannot befriend themselves\", function () {",
							"    pm.response.to.have.status(400);",
							"    pm.response.to.be.json;",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.include(\"Users cannot befriend themselves\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenWrite}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Nombre del usuario 2\",\n  \"login\": \"loginUsuario2\",\n  \"email\": \"usuario2@example.com\",\n  \"password\": \"Password123!\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users/{{userId}}/friends/{{userId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{userId}}",
						"friends",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Agregar como amigo de (1) a (2)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 and The users are already friends\", function () {",
							"    pm.response.to.have.status(400);",
							"    pm.response.to.be.json;",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.include(\"The users are already friends\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenWrite}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Nombre del usuario 2\",\n  \"login\": \"loginUsuario2\",\n  \"email\": \"usuario2@example.com\",\n  \"password\": \"Password123!\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users/{{userId}}/friends/{{user2Id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{userId}}",
						"friends",
						"{{user2Id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Agregar como amigo de (1) a usuario inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 and One or both users not found\", function () {",
							"    pm.response.to.have.status(400);",
							"    pm.response.to.be.json;",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.include(\"One or both users not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenWrite}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Nombre del usuario 2\",\n  \"login\": \"loginUsuario2\",\n  \"email\": \"usuario2@example.com\",\n  \"password\": \"Password123!\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users/{{userId}}/friends/{{wrongId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{userId}}",
						"friends",
						"{{wrongId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar a (2) como amigo de (1)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenDelete}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{userId}}/friends/{{user2Id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{userId}}",
						"friends",
						"{{user2Id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar a (2) como amigo de (1) de nuevo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 and Friend not found\", function () {",
							"    pm.response.to.have.status(400);",
							"    pm.response.to.be.json;",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.include(\"Friend not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenDelete}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{userId}}/friends/{{user2Id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{userId}}",
						"friends",
						"{{user2Id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar a (1) como amigo de (2)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenDelete}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{user2Id}}/friends/{{userId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user2Id}}",
						"friends",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar a usuario inválido como amigo de (2)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 and Friend not found\", function () {",
							"    pm.response.to.have.status(400);",
							"    pm.response.to.be.json;",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.include(\"Friend not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenDelete}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{user2Id}}/friends/{{wrongId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user2Id}}",
						"friends",
						"{{wrongId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener los amigos de (1)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Returns no users\", function () {",
							"    var responseData = pm.response.json();",
							"    pm.expect(responseData.length).to.eql(0);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenRead}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{userId}}/friends",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{userId}}",
						"friends"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar usuario (1)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenDelete}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{userId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar usuario (2)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenDelete}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{user2Id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user2Id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar usuario (3)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenDelete}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{user3Id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user3Id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar usuario (4)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenDelete}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{user4Id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user4Id}}"
					]
				}
			},
			"response": []
		}
	]
}