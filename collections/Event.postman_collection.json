{
	"info": {
		"_postman_id": "c91e4144-f9ad-433a-a6fa-80408c4719f3",
		"name": "Event",
		"description": "- Event\n    \n- Calendar - Event (1 - \\*)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30796580",
		"_collection_link": "https://umeet-web.postman.co/workspace/UMeet-Back~2b3a45ca-5850-4a60-96d4-831af07e8ded/collection/30796580-c91e4144-f9ad-433a-a6fa-80408c4719f3?action=share&source=collection_link&creator=30796580"
	},
	"item": [
		{
			"name": "Create a User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"user_id\", data.id);\r",
							"pm.globals.set(\"calendar_id\", data.calendar.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Emilio\",\r\n    \"login\": \"emil.io\",\r\n    \"email\": \"emil.io@gmail.com\",\r\n    \"password\": \"Emilio01\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": [
				{
					"name": "Create an Event",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"8051e048-de13-4539-9db4-5e7847515493\",\r\n    \"name\": \"Ejercicio\",\r\n    \"location\": \"Gym\",\r\n    \"link\": \"\",\r\n    \"isPrivate\": false,\r\n    \"alert\": null,\r\n    \"startDate\": \"2023-10-28T07:30:00\",\r\n    \"endDate\": \"2023-10-28T08:00:00\",\r\n    \"color\": \"#D0ECE2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/events",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"events"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Create an Event on Calendar",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"event_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Ejercicio\",\r\n    \"location\": \"Gym\",\r\n    \"link\": \"\",\r\n    \"isPrivate\": false,\r\n    \"alert\": null,\r\n    \"startDate\": \"2023-10-28T07:30:00\",\r\n    \"endDate\": \"2023-10-28T07:45:00\",\r\n    \"color\":\"#D0ECE2\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users/{{user_id}}/calendar",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user_id}}",
						"calendar"
					]
				}
			},
			"response": [
				{
					"name": "Create an Event",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"8051e048-de13-4539-9db4-5e7847515493\",\r\n    \"name\": \"Ejercicio\",\r\n    \"location\": \"Gym\",\r\n    \"link\": \"\",\r\n    \"isPrivate\": false,\r\n    \"alert\": null,\r\n    \"startDate\": \"2023-10-28T07:30:00\",\r\n    \"endDate\": \"2023-10-28T08:00:00\",\r\n    \"color\": \"#D0ECE2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/events",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"events"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Get all Events on Calendar",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{user_id}}/calendar",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user_id}}",
						"calendar"
					]
				}
			},
			"response": [
				{
					"name": "Get all Users",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": \"8051e048-de13-4539-9db4-5e7847515493\",\r\n        \"name\": \"Emilio\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Get an Event by ID (detail)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/events/{{event_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"events",
						"{{event_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Get a User by ID",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"8051e048-de13-4539-9db4-5e7847515493\",\r\n    \"name\": \"Emilio\",\r\n    \"login\": \"emil.io\",\r\n    \"email\": \"emil.io@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/{{user_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{user_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Get an Event by wrong ID (detail)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"   pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response message is 'The event with the given id was not found'\", function () {\r",
							"  pm.expect(pm.response.json().message).to.equal(\"The event with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/events/{{wrongUUID}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"events",
						"{{wrongUUID}}"
					]
				}
			},
			"response": [
				{
					"name": "Get a User by ID",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"8051e048-de13-4539-9db4-5e7847515493\",\r\n    \"name\": \"Emilio\",\r\n    \"login\": \"emil.io\",\r\n    \"email\": \"emil.io@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/{{user_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{user_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Update an Event",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"startDate\": \"2023-10-28T08:30:00\",\r\n    \"endDate\": \"2023-10-28T08:40:00\",\r\n    \"color\":\"#000000\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/events/{{event_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"events",
						"{{event_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Update a User",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"myemail@hotmail.com\",\r\n    \"id\": \"8051e048-de13-4539-9db4-5e7847515493\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/{{user_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{user_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Update an Event with wrong ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"   pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response message is 'The event with the given id was not found'\", function () {\r",
							"  pm.expect(pm.response.json().message).to.equal(\"The event with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"startDate\": \"2023-10-28T08:30:00\",\r\n    \"endDate\": \"2023-10-28T09:00:00\",\r\n    \"color\":\"#000000\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/events/{{wrongUUID}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"events",
						"{{wrongUUID}}"
					]
				}
			},
			"response": [
				{
					"name": "Update a User",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"myemail@hotmail.com\",\r\n    \"id\": \"8051e048-de13-4539-9db4-5e7847515493\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/{{user_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{user_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Delete an Event",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/events/{{event_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"events",
						"{{event_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a User",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/{{user_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{user_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Delete an Event with wrong ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"   pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response message is 'The event with the given id was not found'\", function () {\r",
							"  pm.expect(pm.response.json().message).to.equal(\"The event with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/events/{{wrongUUID}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"events",
						"{{wrongUUID}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a User with wrong ID",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"message\": \"The user with the given id was not found\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/{{user_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{user_id}}"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Delete a User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{user_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a User",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/{{user_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{user_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		}
	]
}