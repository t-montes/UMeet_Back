{
	"info": {
		"_postman_id": "7319e942-c583-4973-836c-d9eb9676cab9",
		"name": "User-Group",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14951485",
		"_collection_link": "https://umeet-web.postman.co/workspace/UMeet-Back~2b3a45ca-5850-4a60-96d4-831af07e8ded/collection/30796580-7319e942-c583-4973-836c-d9eb9676cab9?action=share&source=collection_link&creator=14951485"
	},
	"item": [
		{
			"name": "API login user read",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var token = pm.response.json().token;\r",
							"pm.globals.set(\"tokenRead\", token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"userRead\",\r\n    \"password\": \"read\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/people/login",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"people",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "API login user write",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var token = pm.response.json().token;\r",
							"pm.globals.set(\"tokenWrite\", token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"userWrite\",\r\n    \"password\": \"write\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/people/login",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"people",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "API login user delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var token = pm.response.json().token;\r",
							"pm.globals.set(\"tokenDelete\", token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"userDelete\",\r\n    \"password\": \"delete\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/people/login",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"people",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "API login group read",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var token = pm.response.json().token;\r",
							"pm.globals.set(\"tokenGroupRead\", token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"groupRead\",\r\n    \"password\": \"read\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/people/login",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"people",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "API login group write",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var token = pm.response.json().token;\r",
							"pm.globals.set(\"tokenGroupWrite\", token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"groupWrite\",\r\n    \"password\": \"write\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/people/login",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"people",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "API login group delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var token = pm.response.json().token;\r",
							"pm.globals.set(\"tokenGroupDelete\", token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"groupDelete\",\r\n    \"password\": \"delete\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/people/login",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"people",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"user_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenWrite}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Emilio\",\r\n    \"login\": \"emil5.io\",\r\n    \"email\": \"emil5.io@gmail.com\",\r\n    \"password\": \"Emilio01\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": [
				{
					"name": "Create a User",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"8051e048-de13-4539-9db4-5e7847515493\",\r\n    \"name\": \"Emilio\",\r\n    \"login\": \"emil.io\",\r\n    \"email\": \"emil.io@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Create Group",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"group_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenGroupWrite}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Grupo 1\",\r\n    \"topic\": \"Tema 1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/groups",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"groups"
					]
				}
			},
			"response": [
				{
					"name": "Create Group",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Grupo 1\",\r\n    \"topic\": \"Tema 1\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/groups",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"groups"
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\r\n    \"id\": \"1\",\r\n    \"name\": \"Grupo 1\",\r\n    \"topic\": \"Tema 1\"\r\n}\r\n\r\n"
				}
			]
		},
		{
			"name": "Add Member",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenGroupWrite}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/groups/{{group_id}}/members/{{user_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"groups",
						"{{group_id}}",
						"members",
						"{{user_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Add Member",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\": \"{{user_id}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/groups/{{group_id}}/members",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"groups",
								"{{group_id}}",
								"members"
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"message\": \"Usuario añadido al grupo con éxito\",\n    \"data\": {\n        \"groupId\": \"1\",\n        \"userId\": \"uuid-9012\"\n    }\n}"
				}
			]
		},
		{
			"name": "Get all Groups of an User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be an array\", function () {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.be.an('array');\r",
							"});\r",
							"\r",
							"pm.test(\"Each group should have required properties\", function () {\r",
							"    const responseBody = pm.response.json();\r",
							"    responseBody.forEach(group => {\r",
							"        pm.expect(group).to.have.property('name');\r",
							"        pm.expect(group).to.have.property('topic');\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenRead}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{user_id}}/groups",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user_id}}",
						"groups"
					]
				}
			},
			"response": [
				{
					"name": "Get all Groups of an User",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/{{user_id}}/groups",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{user_id}}",
								"groups"
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"id\": \"f3d4e5g6-h7i8-j9k0-l1m2-n3o4p5q6r7\",\n        \"name\": \"Desarrolladores Frontend\",\n        \"topic\": \"Diseño y desarrollo de interfaces\"\n    },\n    {\n        \"id\": \"a1b2c3d4-e5f6-g7h8-i9j0-k1l2m3n4o5\",\n        \"name\": \"Amantes del Café\",\n        \"topic\": \"Discusión sobre los mejores cafés del mundo\"\n    }\n]"
				}
			]
		},
		{
			"name": "Get all Groups of an User with wrong ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have error message\", function () {\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.have.property('error');\r",
							"    pm.expect(responseBody.message).to.eql('User not found');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenRead}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{wrongUUID}}/groups",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{wrongUUID}}",
						"groups"
					]
				}
			},
			"response": [
				{
					"name": "Get all Groups of an User with wrong ID",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/{{wrongUUID}}/groups",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{wrongUUID}}",
								"groups"
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\r\n    \"status\": 404,\r\n    \"error\": \"Resource Not Found\",\r\n    \"message\": \"User not found.\"\r\n}\r\n"
				}
			]
		},
		{
			"name": "Remove Member",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenGroupDelete}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/groups/{{group_id}}/members/{{user_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"groups",
						"{{group_id}}",
						"members",
						"{{user_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Remove Member",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/groups/{{group_id}}/members/{{user_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"groups",
								"{{group_id}}",
								"members",
								"{{user_id}}"
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\r\n    \"message\": \"Usuario eliminado del grupo con éxito\"\r\n}"
				}
			]
		},
		{
			"name": "Delete Group",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenGroupDelete}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/groups/{{group_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"groups",
						"{{group_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete Group",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/groups/{{group_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"groups",
								"{{group_id}}"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Delete User 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{tokenDelete}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{user_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a User",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/{{user_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{user_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		}
	]
}